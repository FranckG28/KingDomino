@startuml
'https://plantuml.com/class-diagram

skinparam style strictuml
skinparam classAttributeIconSize 0
skinparam classFontStyle Bold
hide enum methods

class Kingdomino {
    + {static}main()
}

package models {

        interface GameObserver {
            + react(game:Game)
        }

        class Game {
            + Game(players:List<Player>, dynasty:Boolean,  middle:Boolean, harmony:Boolean)

            + round:Integer

            + dynasty:Boolean
            + middle:Boolean
            + harmony:Boolean

            + getCurrentPlayer():Player
            + setCurrentPlayer(player:Player)

            + getDraw(): List<Domino>
            + getLastDraw(): List<Domino>
            + setDraw(draw:List<Domino>)

            + notifyObservers()
            + addObserver(observer:GameObserver)

        }

        class Player {
            + Player(name:String, kings:List<King>)
            - name:String

            + getName():String
            + getColor():Colors
            + getKings():List<King>

        }

        class King {
            + King(parent:Player)
        }

        class Kingdom {
            + Kingdom(parent:Player)
        }

        class Domino {
            + Domino(number:Integer,tile1:Tile, tile2:Tile)
            - number:Integer

            + getNumber():Integer
            + getTile1():Tile
            + getTile2():Tile

        }

        class Tile {
            + Tile(land:Lands, crowns:Integer)
            - crowns:Integer

            + getCrowns():Integer
            + getLand():Lands
        }

        enum Lands {
            WATER
            FOREST
            WHEAT
            GRASS
            SWAMP
            MINE
            CASTLE
        }

        enum Colors {
            BLUE
            GREEN
            YELLOW
            PINK
        }

    }

    package views {
        class GameView implements GameObserver {
            + GameView()
            + react(game:Game)
        }

        class StartMenu {
            + StartMenu(controller:GameCreator)
        }

        class EndMenu {
           + EndMenu(game:Game)
        }
    }

    package controllers {

        class GameController {
            + GameController(game:Game)
            + makeDraw()
            + playerPlaceCastle()
            + playerChooseDomino()
            + playerPlaceDomino()
        }

        class GameCreator {
            + GameCreator()
            + createGame()
        }

    }

    Kingdomino ..> StartMenu : "<<use>>"
    Kingdomino ..> GameCreator : "<<use>>"

    GameCreator ..> Game : "<<use>>"
    GameCreator ..> GameView : "<<use>>"
    GameCreator ..> GameController : "<<use>>"

    Game *--> Player : " + players" > contains 2, 4
    Game *--> Domino : " + deck" > contains 0, 48
    Game *--> Domino : " - draw" > contains 3, 4
    Game *--> Domino : " - lastDraw" > contains 3, 4
    Game o--> GameObserver : " - observers" > contains *
    Game o--> Player : " - currentPlayer" > contains

    GameController o--> Game : " - game" > contains
    GameController ..> EndMenu : "<<use>>"

    EndMenu ..> Game : "<<use>>"
    EndMenu ..> StartMenu : "<<use>>"

    Player *--> Kingdom : " + kingdom" > contains
    Player *--> King : " - kings" > contains 1,2
    Player *-> Colors : " - color" > has

    King o--> Player : " - parent" > knows

    Kingdom o--> Player : " - parent" > knows
    Kingdom o--> Tile : " + board[5][5]" > contains

    Domino o-> Tile : " - tile1" > contains
    Domino o-> Tile : " - tile2" > contains
    Domino o--> King : " + king" > contains

    Tile *-> Lands : " - type" > is

@enduml